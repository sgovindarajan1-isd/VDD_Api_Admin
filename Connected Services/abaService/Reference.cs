//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eCAPDDApi.abaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.lyonsreg.com/WebService/ABAService", ConfigurationName="abaService.ABAServiceSoap")]
    public interface ABAServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/ValidateABA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateABA(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/ValidateABA", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateABAAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/VerifyABA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyABA(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/VerifyABA", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyABAAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/VerifyWire", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyWire(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/VerifyWire", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyWireAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksForEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksForEW(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksForEW", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksForEWAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksXML(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksXMLAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksPrimarySortXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksPrimarySortXML(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksPrimarySortXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksPrimarySortXMLAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksXML_W3C", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksXML_W3C(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksXML_W3C", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksXML_W3CAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksWithWireXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksWithWireXML(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksWithWireXML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksWithWireXMLAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksWithWireXML_W3C", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBanksWithWireXML_W3C(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetBanksWithWireXML_W3C", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBanksWithWireXML_W3CAsync(string token, string aba);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/FindASCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int FindASCompanyID(string serialNumber, string payeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/FindASCompanyID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> FindASCompanyIDAsync(string serialNumber, string payeeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/FindCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int FindCompanyID(string wildcard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/FindCompanyID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> FindCompanyIDAsync(string wildcard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetCompanyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetCompanyID(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/GetCompanyID", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetCompanyIDAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/Logoff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Logoff(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/Logoff", ReplyAction="*")]
        System.Threading.Tasks.Task LogoffAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/Logon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Logon(int companyID, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/Logon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogonAsync(int companyID, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/RequiredLogon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RequiredLogon(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.lyonsreg.com/WebService/ABAService/RequiredLogon", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RequiredLogonAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ABAServiceSoapChannel : eCAPDDApi.abaService.ABAServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ABAServiceSoapClient : System.ServiceModel.ClientBase<eCAPDDApi.abaService.ABAServiceSoap>, eCAPDDApi.abaService.ABAServiceSoap {
        
        public ABAServiceSoapClient() {
        }
        
        public ABAServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ABAServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ABAServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ABAServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidateABA(string token, string aba) {
            return base.Channel.ValidateABA(token, aba);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateABAAsync(string token, string aba) {
            return base.Channel.ValidateABAAsync(token, aba);
        }
        
        public bool VerifyABA(string token, string aba) {
            return base.Channel.VerifyABA(token, aba);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyABAAsync(string token, string aba) {
            return base.Channel.VerifyABAAsync(token, aba);
        }
        
        public bool VerifyWire(string token, string aba) {
            return base.Channel.VerifyWire(token, aba);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyWireAsync(string token, string aba) {
            return base.Channel.VerifyWireAsync(token, aba);
        }
        
        public string GetBanksForEW(string token, string aba) {
            return base.Channel.GetBanksForEW(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksForEWAsync(string token, string aba) {
            return base.Channel.GetBanksForEWAsync(token, aba);
        }
        
        public string GetBanksXML(string token, string aba) {
            return base.Channel.GetBanksXML(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksXMLAsync(string token, string aba) {
            return base.Channel.GetBanksXMLAsync(token, aba);
        }
        
        public string GetBanksPrimarySortXML(string token, string aba) {
            return base.Channel.GetBanksPrimarySortXML(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksPrimarySortXMLAsync(string token, string aba) {
            return base.Channel.GetBanksPrimarySortXMLAsync(token, aba);
        }
        
        public string GetBanksXML_W3C(string token, string aba) {
            return base.Channel.GetBanksXML_W3C(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksXML_W3CAsync(string token, string aba) {
            return base.Channel.GetBanksXML_W3CAsync(token, aba);
        }
        
        public string GetBanksWithWireXML(string token, string aba) {
            return base.Channel.GetBanksWithWireXML(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksWithWireXMLAsync(string token, string aba) {
            return base.Channel.GetBanksWithWireXMLAsync(token, aba);
        }
        
        public string GetBanksWithWireXML_W3C(string token, string aba) {
            return base.Channel.GetBanksWithWireXML_W3C(token, aba);
        }
        
        public System.Threading.Tasks.Task<string> GetBanksWithWireXML_W3CAsync(string token, string aba) {
            return base.Channel.GetBanksWithWireXML_W3CAsync(token, aba);
        }
        
        public int FindASCompanyID(string serialNumber, string payeeCode) {
            return base.Channel.FindASCompanyID(serialNumber, payeeCode);
        }
        
        public System.Threading.Tasks.Task<int> FindASCompanyIDAsync(string serialNumber, string payeeCode) {
            return base.Channel.FindASCompanyIDAsync(serialNumber, payeeCode);
        }
        
        public int FindCompanyID(string wildcard) {
            return base.Channel.FindCompanyID(wildcard);
        }
        
        public System.Threading.Tasks.Task<int> FindCompanyIDAsync(string wildcard) {
            return base.Channel.FindCompanyIDAsync(wildcard);
        }
        
        public int GetCompanyID(string token) {
            return base.Channel.GetCompanyID(token);
        }
        
        public System.Threading.Tasks.Task<int> GetCompanyIDAsync(string token) {
            return base.Channel.GetCompanyIDAsync(token);
        }
        
        public void Logoff(string token) {
            base.Channel.Logoff(token);
        }
        
        public System.Threading.Tasks.Task LogoffAsync(string token) {
            return base.Channel.LogoffAsync(token);
        }
        
        public string Logon(int companyID, string userName, string password) {
            return base.Channel.Logon(companyID, userName, password);
        }
        
        public System.Threading.Tasks.Task<string> LogonAsync(int companyID, string userName, string password) {
            return base.Channel.LogonAsync(companyID, userName, password);
        }
        
        public bool RequiredLogon(string token) {
            return base.Channel.RequiredLogon(token);
        }
        
        public System.Threading.Tasks.Task<bool> RequiredLogonAsync(string token) {
            return base.Channel.RequiredLogonAsync(token);
        }
    }
}
